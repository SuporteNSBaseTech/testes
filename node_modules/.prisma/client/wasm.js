
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "69d742ee20b815d88e17e54db4a2a7a3b30324e3"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  from: 'from',
  to: 'to',
  content: 'content',
  createdAt: 'createdAt',
  visualizado: 'visualizado'
};

exports.Prisma.Cadastro_pacientesScalarFieldEnum = {
  id: 'id',
  Nome: 'Nome',
  Telefone: 'Telefone',
  Email: 'Email',
  Data_de_Nascimento: 'Data_de_Nascimento',
  Idade: 'Idade',
  Genero: 'Genero',
  CPF_CNPJ: 'CPF_CNPJ',
  Endereco: 'Endereco',
  Numero: 'Numero',
  CEP: 'CEP',
  Cidade: 'Cidade',
  Estado: 'Estado',
  Nome_do_Pai_ou_Responsavel: 'Nome_do_Pai_ou_Responsavel',
  Telefone_Pai: 'Telefone_Pai',
  Nome_da_Mae_ou_Responsavel: 'Nome_da_Mae_ou_Responsavel',
  Telefone_Mae: 'Telefone_Mae',
  Especialista: 'Especialista',
  recoveryCode: 'recoveryCode',
  Eh_Crianca: 'Eh_Crianca'
};

exports.Prisma.AgendamentoScalarFieldEnum = {
  id: 'id',
  Nome: 'Nome',
  Telefone: 'Telefone',
  Especialista: 'Especialista',
  Data_do_Atendimento: 'Data_do_Atendimento',
  Horario_da_consulta: 'Horario_da_consulta',
  Horario_de_Termino_da_consulta: 'Horario_de_Termino_da_consulta',
  Valor_da_Consulta: 'Valor_da_Consulta',
  Status_da_Consulta: 'Status_da_Consulta',
  Status_do_pagamento: 'Status_do_pagamento',
  observacao: 'observacao',
  recoveryCode: 'recoveryCode',
  Eh_Aluno: 'Eh_Aluno'
};

exports.Prisma.Cadastro_convenioScalarFieldEnum = {
  id: 'id',
  Nome_do_Convenio: 'Nome_do_Convenio',
  CNPJ: 'CNPJ',
  Valores: 'Valores',
  Data_de_Contratacao: 'Data_de_Contratacao'
};

exports.Prisma.Cadastro_userScalarFieldEnum = {
  id: 'id',
  Nome: 'Nome',
  Email: 'Email',
  Usuario: 'Usuario',
  Senha: 'Senha',
  recoveryCode: 'recoveryCode',
  Profissional: 'Profissional',
  Secretaria: 'Secretaria',
  foto: 'foto'
};

exports.Prisma.Fluxo_de_caixaScalarFieldEnum = {
  id: 'id',
  Descricao: 'Descricao',
  Valor: 'Valor',
  Tipo: 'Tipo',
  Data: 'Data',
  Especialista: 'Especialista'
};

exports.Prisma.EsperaScalarFieldEnum = {
  id: 'id',
  Nome: 'Nome',
  Telefone: 'Telefone',
  Convenio: 'Convenio',
  Especialista: 'Especialista',
  Observacao: 'Observacao'
};

exports.Prisma.Cadastro_profScalarFieldEnum = {
  id: 'id',
  Nome: 'Nome',
  Faixa_Etaria_de_Atendimento: 'Faixa_Etaria_de_Atendimento',
  Dias_de_Atendimento: 'Dias_de_Atendimento',
  Horarios_de_Atendimento: 'Horarios_de_Atendimento',
  Especialidade: 'Especialidade',
  Registro_do_Profissional: 'Registro_do_Profissional',
  Especialista: 'Especialista'
};

exports.Prisma.AtendimentoScalarFieldEnum = {
  id: 'id',
  id_agendamento: 'id_agendamento',
  id_paciente: 'id_paciente',
  conteudoAtestado: 'conteudoAtestado',
  conteudoComparecimento: 'conteudoComparecimento',
  conteudoEncaminhamento: 'conteudoEncaminhamento',
  conteudoProntuario: 'conteudoProntuario',
  conteudoAnamineseI: 'conteudoAnamineseI',
  conteudoAnamineseA: 'conteudoAnamineseA',
  conteudoNeuroI: 'conteudoNeuroI',
  conteudoNeuroA: 'conteudoNeuroA',
  dataHora: 'dataHora',
  tempo: 'tempo'
};

exports.Prisma.AjudaScalarFieldEnum = {
  id: 'id',
  tela: 'tela',
  descricao: 'descricao',
  status: 'status',
  criadoEm: 'criadoEm',
  especialista: 'especialista'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Messages: 'Messages',
  Cadastro_pacientes: 'Cadastro_pacientes',
  Agendamento: 'Agendamento',
  cadastro_convenio: 'cadastro_convenio',
  cadastro_user: 'cadastro_user',
  Fluxo_de_caixa: 'Fluxo_de_caixa',
  Espera: 'Espera',
  cadastro_prof: 'cadastro_prof',
  Atendimento: 'Atendimento',
  Ajuda: 'Ajuda'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
